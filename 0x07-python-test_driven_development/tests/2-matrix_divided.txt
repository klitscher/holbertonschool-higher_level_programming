>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


>>> matrix = [[1.5, 2, 3], [1.6, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.5, 0.67, 1.0], [0.53, 1.67, 2.0]]

>>> matrix = ([1, 2, 3], [1, 2, 3])
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [(1, 2, 3), (1, 2, 3)]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [['Hello', 2, 3], [1, 2, 3]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3, 5], [1, 2, 3]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3, 5], [1, 2, 3, 4, 5]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3], [1, 2, 3]]
>>> matrix_divided(matrix, "hello")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [[1, 2, 3], [1, 2, 3]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero
